##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

#proxy_cache_path /var/log/nginx/proxy levels=1:2 keys_zone=p1mon_cache:10m max_size=19m inactive=60m use_temp_path=off;


# Default server configuration
#

server {

	proxy_cache nginx_cache;
	listen 80 default_server;
	#listen [::]:80 default_server;

        root /p1mon/www;
	index index.php index.html index.htm;

	server_name _;

        location ^~ /PROXY_PATH_REPLACE/ {
                rewrite ^/PROXY_PATH_REPLACE(.*)$ $1 last;
        }

	location / {
		# First attempt to serve request as file, then fastcgi_cache_lock on; 
		# # as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
        location /nginx_status {
 		stub_status;
 		allow 127.0.0.1;	#only allow requests from localhost
 		allow ::1;		#only allow requests from loopback
 		deny all;		#deny all other hosts
 	}

	# FastCGI pages to skip
	#set $skip_cache 0;

	# POST requests and urls with a query string should always go to PHP
	#if ($request_method = POST) {
	#	set $skip_cache 1;
	#}
	#if ($query_string != "") {
	#	set $skip_cache 1;
	#}



	############################################
	# pass PHP scripts to FastCGI server       #
	############################################
	location ~ \.php$ {


		# when $skip_cache set to 1 do not use cache.

		# use upstream PHP-FPM server not the cache.
		#fastcgi_cache_bypass $skip_cache;
		# don't cache respons.
		#fastcgi_no_cache $skip_cache;


		include snippets/fastcgi-php.conf;
	        # With php-fpm (or other unix sockets):
		#fastcgi_pass unix:/run/php/php7.4-fpm.sock;
		fastcgi_pass unix:/run/php/php8.2-fpm.sock;
		fastcgi_read_timeout 305;


		#fastcgi_cache phpcache;
		#fastcgi_cache_valid 200 301 302 60m;
		#fastcgi_cache_use_stale error timeout updating invalid_header http_500 http_503;
		#fastcgi_cache_min_uses 1;
                #add_header X-FastCGI-Cache $upstream_cache_status;

	}
	#/run/php/php7.3-fpm.sock

	##########################################
	# API aanpassingen                       #
        ##########################################
	location /api/ {
		include proxy_params;
		# gaf fout melding in de log
		# proxy_pass http://localhost:10721;

		# werkt ok, maar luister naar alles en mogelijke bypass
		#proxy_pass http://0.0.0.0:10721;

		proxy_pass http://127.0.0.1:10721;

	}

	# cache "no-cache" controleert op de server of deze aangepast is.
	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		add_header Cache-Control "no-cache";

		# added on 2021-02-27
                # fastcgi_cache CACHE1;
                # fastcgi_cache_valid 200 60m;

	}

}
